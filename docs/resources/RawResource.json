{
  "$schema": "https://raw.githubusercontent.com/sims4toolkit/misc/main/json-schemas/docs-item-schema.json",
  "imports": [
    "import { RawResource } from \"@s4tk/models\"; // ESM",
    "const { RawResource } = require(\"@s4tk/models\"); // CJS"
  ],
  "header": {
    "title": {
      "prefix": "class",
      "name": "RawResource",
      "extends": [
        {
          "name": "StaticResource",
          "path": {
            "pkg": "models",
            "group": "types",
            "item": "StaticResource"
          }
        }
      ]
    },
    "description": "Model for resources that have not been parsed.",
    "sourceCode": "src/lib/resources/raw/raw-resource.ts"
  },
  "sections": [
    {
      "title": "Properties",
      "content": [
        {
          "displayType": "property",
          "prefix": "readonly",
          "name": "encodingType",
          "description": "Always 'EncodingType.Unknown'.",
          "type": {
            "name": "EncodingType",
            "path": {
              "pkg": "models",
              "group": "enums",
              "item": "EncodingType"
            }
          },
          "overrides": {
            "name": "Resource",
            "path": {
              "pkg": "models",
              "group": "types",
              "item": "Resource"
            }
          }
        },
        {
          "displayType": "property",
          "prefix": "get, set",
          "name": "reason",
          "optional": true,
          "description": "Why this resource was loaded raw.",
          "type": {
            "name": "string"
          }
        }
      ]
    },
    {
      "title": "Initialization",
      "content": [
        {
          "displayType": "function",
          "name": "constructor",
          "description": "Creates a new RawResource.",
          "returnType": {
            "name": "RawResource"
          },
          "arguments": [
            {
              "name": "bufferWrapper",
              "type": {
                "name": "CompressedBuffer",
                "path": {
                  "pkg": "compression",
                  "group": "interfaces",
                  "item": "CompressedBuffer"
                }
              },
              "description": "The CompressedBuffer wrapper for this resource's buffer"
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "name": "RawResourceCreationOptions",
                "path": {
                  "pkg": "models",
                  "group": "types",
                  "item": "RawResourceCreationOptions"
                }
              },
              "description": "Object containing optional arguments"
            }
          ]
        },
        {
          "displayType": "function",
          "prefix": "static",
          "name": "from",
          "description": "Creates a new RawResource from the given buffer. The buffer is assumed to be uncompressed; passing in a compressed buffer can lead to unexpected behavior.",
          "returnType": {
            "name": "RawResource"
          },
          "arguments": [
            {
              "name": "buffer",
              "type": {
                "name": "Buffer"
              },
              "description": "The decompressed buffer for this RawResource"
            },
            {
              "name": "options",
              "type": {
                "name": "RawResourceCreationOptions",
                "path": {
                  "pkg": "models",
                  "group": "types",
                  "item": "RawResourceCreationOptions"
                }
              },
              "optional": true,
              "description": "Object containing optional arguments"
            }
          ],
          "examples": [
            {
              "code": "const raw = RawResource.from(bufferWrapper, {\n  reason: \"Because I said so.\"\n});"
            }
          ]
        },
        {
          "displayType": "function",
          "prefix": "static async",
          "name": "fromAsync",
          "description": "Asynchronously creates a new RawResource from the given buffer. The buffer is assumed to be uncompressed; passing in a compressed buffer can lead to unexpected behavior.",
          "returnType": {
            "name": "Promise<RawResource>"
          },
          "arguments": [
            {
              "name": "buffer",
              "type": {
                "name": "Buffer"
              },
              "description": "The decompressed buffer for this RawResource"
            },
            {
              "name": "options",
              "type": {
                "name": "RawResourceCreationOptions",
                "path": {
                  "pkg": "models",
                  "group": "types",
                  "item": "RawResourceCreationOptions"
                }
              },
              "optional": true,
              "description": "Object containing optional arguments"
            }
          ],
          "examples": [
            {
              "code": "RawResource.fromAsync(bufferWrapper, {\n  reason: \"Because I said so.\"\n}).then(raw => {\n  // do stuff\n});"
            }
          ]
        }
      ]
    }
  ]
}